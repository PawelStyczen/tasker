[{"/Users/pawelstyczen/Projekty/learning/tasker/src/index.js":"1","/Users/pawelstyczen/Projekty/learning/tasker/src/App.js":"2","/Users/pawelstyczen/Projekty/learning/tasker/src/theme.js":"3","/Users/pawelstyczen/Projekty/learning/tasker/src/Header.jsx":"4","/Users/pawelstyczen/Projekty/learning/tasker/src/components/Tasker/Tasker.js":"5","/Users/pawelstyczen/Projekty/learning/tasker/src/components/UI/BottomNav/BottomNav.js":"6","/Users/pawelstyczen/Projekty/learning/tasker/src/components/Task/Task.js":"7","/Users/pawelstyczen/Projekty/learning/tasker/src/reportWebVitals.js":"8","/Users/pawelstyczen/Projekty/learning/tasker/src/components/UI/AddTaskModal/AddTaskModal.js":"9","/Users/pawelstyczen/Projekty/learning/tasker/src/firebase.js":"10","/Users/pawelstyczen/Projekty/learning/tasker/src/components/signup/Signup.js":"11","/Users/pawelstyczen/Projekty/learning/tasker/src/contexts/AuthContext.js":"12","/Users/pawelstyczen/Projekty/learning/tasker/src/components/Dashboard/Dashboard.js":"13","/Users/pawelstyczen/Projekty/learning/tasker/src/components/Login/Login.js":"14","/Users/pawelstyczen/Projekty/learning/tasker/src/components/UI/SettingsModal/SettingsModal.js":"15","/Users/pawelstyczen/Projekty/learning/tasker/src/components/PrivateRoute/PrivateRoute.js":"16","/Users/pawelstyczen/Projekty/learning/tasker/src/components/ForgotPassword/ForgotPassword.js":"17"},{"size":606,"mtime":1612611732819,"results":"18","hashOfConfig":"19"},{"size":864,"mtime":1612611732815,"results":"20","hashOfConfig":"19"},{"size":336,"mtime":1612611732819,"results":"21","hashOfConfig":"19"},{"size":488,"mtime":1609698192346,"results":"22","hashOfConfig":"19"},{"size":8801,"mtime":1614112479384,"results":"23","hashOfConfig":"19"},{"size":2909,"mtime":1613680818176,"results":"24","hashOfConfig":"19"},{"size":3516,"mtime":1614236232762,"results":"25","hashOfConfig":"19"},{"size":362,"mtime":1609187064201,"results":"26","hashOfConfig":"19"},{"size":3354,"mtime":1614112347861,"results":"27","hashOfConfig":"19"},{"size":802,"mtime":1613680818178,"results":"28","hashOfConfig":"19"},{"size":5026,"mtime":1614115423708,"results":"29","hashOfConfig":"19"},{"size":1088,"mtime":1612611732818,"results":"30","hashOfConfig":"19"},{"size":151,"mtime":1611949700369,"results":"31","hashOfConfig":"19"},{"size":4738,"mtime":1614115100012,"results":"32","hashOfConfig":"19"},{"size":3106,"mtime":1612611732818,"results":"33","hashOfConfig":"19"},{"size":450,"mtime":1612611732816,"results":"34","hashOfConfig":"19"},{"size":4105,"mtime":1612611732815,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1myfjhz",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},"/Users/pawelstyczen/Projekty/learning/tasker/src/index.js",[],["81","82"],"/Users/pawelstyczen/Projekty/learning/tasker/src/App.js",[],"/Users/pawelstyczen/Projekty/learning/tasker/src/theme.js",[],"/Users/pawelstyczen/Projekty/learning/tasker/src/Header.jsx",["83","84"],"import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles(() => ({\n  typographyStyles: {\n    flex: 1\n  }\n}));\n\nconst Header = () => {\n    const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <AcUnitIcon></AcUnitIcon>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n",["85","86"],"/Users/pawelstyczen/Projekty/learning/tasker/src/components/Tasker/Tasker.js",["87","88","89","90","91"],"import React, { useReducer, useEffect } from \"react\";\nimport { db } from \"../../firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport Task from \"../Task/Task\";\n\nimport BottomNav from \"../UI/BottomNav/BottomNav\";\nimport AddTaskModal from \"../UI/AddTaskModal/AddTaskModal\";\nimport SettingsModal from \"../UI/SettingsModal/SettingsModal\";\n\nfunction reducer(tasks, action) {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      return [...tasks, newTask(action.payload.name, action.payload.notes, action.payload.importance)];\n    case \"GET_FROM_FIREBASE\":\n      return [...tasks, { ...action.payload.task }];\n    case \"CHANGE_IMPORTANCE\":\n      return tasks.map((task) => {\n        if(task.id === action.payload.id) {\n          return {\n            ...task, importance: !task.importance \n          }\n        }\n      })\n\n    case \"SAVE_EDITED_TASK\":\n      return tasks.map((task) => {\n        if (task.id === action.payload.id) {\n          return {\n            ...task,\n            name: action.payload.name,\n            notes: action.payload.notes,\n            importance: action.payload.importance\n          };\n        }\n        return task;\n      });\n    case \"REMOVE_TASK\":\n      return tasks.filter((task) => task.id !== action.payload.id);\n    case \"COMPLETE_TASK\":\n      return tasks.map((task) => {\n        if (task.id === action.payload.id) {\n          return { ...task, completed: !task.completed };\n        }\n        return task;\n      });\n    default:\n      return tasks;\n  }\n}\n\nfunction newTask(name, notes, importance) {\n  return { id: Date.now(), name: name, completed: false, notes: notes, importance: importance};\n}\n\n\n\nfunction filterTaskReducer(filteredTasks, action) {\n  switch (action.type) {\n    case \"SHOW_ALL\":\n      return [...action.payload.tasks];\n    case \"SHOW_COMPLETED\":\n      return [...action.payload.tasks.filter((task) => task.completed)];\n    case \"SHOW_PENDING\":\n      return [...action.payload.tasks.filter((task) => !task.completed)];\n    case \"SHOW_IMPORTANT\":\n      return [...action.payload.tasks.filter((task) => task.importance)]\n  }\n}\n\n\n\n\n\n\n\nfunction Tasker() {\n  //STYLING/////////////////////////////////////////////////////////////////////////////////////////////////\n  const useStyles = makeStyles({\n    root: {\n      paddingTop: \"1rem\",\n      background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n      minHeight: \"95vh\",\n      overflow: \"hidden\",\n      position: \"relative\",\n    },\n  });\n  const classes = useStyles();\n\n\n\n\n\n  //TASK HANDLING////////////////////////////////////////////////////////////////////////////////////////////////\n  //main task state\n  const [tasks, dispatch] = useReducer(reducer, []);\n  //check if firebase was initialized\n  const [firebaseDbInitialized, setFirebaseDbInitialized] = React.useState(\n    false\n  );\n  const { currentUser } = useAuth();\n\n  //ADD TASKS/////////////////////////////\n  const addTaskHandler = () => {\n    dispatch({\n      type: \"ADD_TASK\",\n      payload: {\n        name: taskName,\n        notes: taskNotes,\n        importance: importantTask\n      },\n    });\n\n    hideModalHandler();\n  };\n\n  //EDIT TASKS//////\n  const saveEditedTaskHandler = () => {\n    dispatch({\n      type: \"SAVE_EDITED_TASK\",\n      payload: {\n        name: taskName,\n        notes: taskNotes,\n        importance: importantTask,\n        id: editedTaskId,\n\n      },\n    });\n    hideModalHandler();\n  };\n\n  //DELETE TASKS///\n  const deleteTaskHandler = (id) => {\n    dispatch({\n      type: \"REMOVE_TASK\",\n      payload: {\n        taskName: taskName,\n        id: id,\n      },\n    });\n  };\n\n  //COMPLETE TASKS/////////\n  const completeTaskHandler = (id) => {\n    dispatch({\n      type: \"COMPLETE_TASK\",\n      payload: {\n        id: id,\n      },\n    });\n   \n  };\n\n\n\n  //FIREBASE///////////////////////////////////////////////////////////////////////////////////\n  \n  useEffect(() => {\n    getFromFirebase();\n  }, []);\n\n  useEffect(() => {\n    if (firebaseDbInitialized) {\n      addToFirebase(tasks)\n    }\n  }, [tasks]);\n\n  const addToFirebase = (tasks) => {\n    db.ref(currentUser.uid).set(tasks, (err) => {\n      if (err) console.log(err);\n    });\n  };\n\n  const getFromFirebase = () => {\n    var query = db.ref(currentUser.uid).orderByKey();\n    query.once(\"value\").then(function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        // childData will be the actual contents of the child\n        var childData = childSnapshot.val();\n        \n        dispatch({\n          type: \"GET_FROM_FIREBASE\",\n          payload: {\n            task: childData,\n          },\n        });\n      });\n    });\n    setFirebaseDbInitialized(true);\n  };\n  \n\n  //MODAL CONTROLS///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  const [showModal, setShowModal] = React.useState(false);\n  const [showSettings, setShowSettings] = React.useState(false);\n  const [editingTask, setEditingTask] = React.useState(false);\n\n  const showAddTaskModalHandler = (editing) => {\n    if (editing === \"EDIT_TASK\") {\n      setEditingTask(true);\n      setShowModal(true);\n    } else {\n      setEditingTask(false);\n      setShowModal(true);\n    }\n  };\n\n  const showSettingsModalHandler = () => {\n    setShowSettings(true);\n  };\n\n  const hideModalHandler = () => {\n    setShowModal(false);\n    setShowSettings(false);\n  };\n\n  //TASK INPUT CONTROLS///////////////////\n  const [taskName, setTaskName] = React.useState(\"\");\n  const handleTaskInput = (val) => {\n    setTaskName(val.target.value);\n  };\n  const [taskNotes, setTaskNotes] = React.useState(\"\");\n  const handleNotesInput = (val) => {\n    setTaskNotes(val.target.value);\n  };\n\n  const [importantTask, setImportantTask] = React.useState(false);\n  const handleImportanceChange = (checked) => {\n  setImportantTask(checked)\n  }\n\n  //TASK EDIT INPUT CONTROLS///////////\n  const [editedTaskId, setEditedTaskId] = React.useState(\"\");\n  const editTaskHandler = (id) => {\n    let editedTask = tasks.find((task) => task.id === id);\n    setTaskName(editedTask.name);\n    setTaskNotes(editedTask.notes);\n    \n    if(editingTask) {setImportantTask(editedTask.importance)} else {setImportantTask(false)}\n    setEditedTaskId(id);\n  };\n\n \n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n \n  // FILTER LOGIC ///////////////////////////////////////////////////////\n  const [filteredTasks, filter] = useReducer(filterTaskReducer, []);\n  const [taskFilter, setTaskFilter] = React.useState(\"SHOW_ALL\");\n  useEffect(() => {\n    if (firebaseDbInitialized) {\n      getVisibleTasks(tasks, taskFilter);\n    }\n  }, [tasks, taskFilter]);\n\n  const getVisibleTasks = (tasks, type) => {\n    filter({\n      type: type,\n      payload: {\n        tasks: tasks,\n      },\n    });\n  };\n\n  const taskFilterChangeHandler = (newFilter) => {\n    setTaskFilter(newFilter);\n    \n  };\n\n\n  ////////////////////////////////////////////////////\n  return (\n    <React.Fragment>\n      <Container className={classes.root} maxWidth=\"md\">\n        {firebaseDbInitialized\n          ? filteredTasks.map((task) => {\n              return (\n                <Task\n                  key={task.id}\n                  id={task.id}\n                  taskNotes={task.notes}\n                  taskTekst={task.name}\n                  taskImportance={task.importance}\n                  deleteTask={deleteTaskHandler}\n                  completeTask={completeTaskHandler}\n                  editTask={editTaskHandler}\n                  saveEditedTask={saveEditedTaskHandler}\n                  showEditModal={() => {\n                    showAddTaskModalHandler(\"EDIT_TASK\");\n                  }}\n                  task={task}\n                />\n              );\n            })\n          : null}\n\n        <AddTaskModal\n          show={showModal}\n          hide={hideModalHandler}\n          setTaskName={handleTaskInput}\n          setTaskNotes={handleNotesInput}\n          setImportantTask={handleImportanceChange}\n          importantTask={importantTask}\n          taskName={editingTask ? taskName : null}\n          taskNotes={editingTask ? taskNotes : null}\n          saveTask={editingTask ? saveEditedTaskHandler : addTaskHandler}\n          title={editingTask ? \"Edit Task\" : \"Add Task\"}\n          editTask={editingTask}\n        />\n        <SettingsModal\n          show={showSettings}\n          hide={hideModalHandler}\n        ></SettingsModal>\n      </Container>\n\n      <BottomNav\n        showAddTaskModal={showAddTaskModalHandler}\n        showSettingsModal={showSettingsModalHandler}\n        taskFilterChange={taskFilterChangeHandler}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default Tasker;\n","/Users/pawelstyczen/Projekty/learning/tasker/src/components/UI/BottomNav/BottomNav.js",["92","93","94","95","96","97"],"import React from \"react\";\nimport { FilterDispatchContext } from \"../../Tasker/Tasker\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\n\nimport { AddCircle, Settings } from \"@material-ui/icons\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"sticky\",\n    bottom: \"0\",\n  },\n});\n\nexport default function BottomNav({\n  showAddTaskModal,\n  showSettingsModal,\n  taskFilterChange,\n}) {\n  // button styles////\n  const classes = useStyles();\n\n  //MENU HANDLING/////////////////////\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleOpenMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  // FILTER CHANGE///////////////////////////////////\n  const [filterLabel, setFilterLabel] = React.useState(\"all tasks\");\n  const handleFilterChange = (filter) => {\n    taskFilterChange(filter);\n    switch (filter) {\n      case \"SHOW_ALL\":\n        setFilterLabel(\"All tasks\");\n      case \"SHOW_COMPLETED\":\n        setFilterLabel(\"Completed\");\n      case \"SHOW_PENDING\":\n        setFilterLabel(\"Pending\");\n      case \"SHOW_IMPORTANT\":\n        setFilterLabel(\"Important\");\n    }\n    //Close menu\n    handleCloseMenu();\n  };\n\n  ///////////////////////////\n  return (\n    <BottomNavigation showLabels className={classes.root}>\n      <BottomNavigationAction\n        label={filterLabel}\n        icon={<RestoreIcon />}\n        onClick={handleOpenMenu}\n      />\n      <BottomNavigationAction\n        label=\"Add\"\n        icon={<AddCircle />}\n        onClick={() => {\n          showAddTaskModal(\"ADD_TASK\");\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Settings\"\n        icon={<Settings />}\n        onClick={showSettingsModal}\n      />\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem\n          onClick={() => {\n            handleFilterChange(\"SHOW_ALL\");\n          }}\n        >\n          All tasks\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleFilterChange(\"SHOW_PENDING\");\n          }}\n        >\n          Pending\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleFilterChange(\"SHOW_COMPLETED\");\n          }}\n        >\n          Completed\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleFilterChange(\"SHOW_IMPORTANT\");\n          }}\n        >\n          Important\n        </MenuItem>\n      </Menu>\n    </BottomNavigation>\n  );\n}\n","/Users/pawelstyczen/Projekty/learning/tasker/src/components/Task/Task.js",["98","99"],"/Users/pawelstyczen/Projekty/learning/tasker/src/reportWebVitals.js",[],"/Users/pawelstyczen/Projekty/learning/tasker/src/components/UI/AddTaskModal/AddTaskModal.js",["100","101"],"import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"80%\",\n    margin: \"auto\",\n\n    \"& > *\": {\n      marginBottom: \"2rem\",\n    },\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AddTaskModal({\n  title,\n  show,\n  hide,\n  setTaskName,\n  setTaskNotes,\n  setImportantTask,\n  importantTask,\n  taskName,\n  taskNotes,\n  saveTask,\n  editTask\n}) {\n  //MODAL CONTROLS/////////\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    setOpen(show);\n    if(!editTask){setImportantTask(false)}\n  }, [show]);\n\n\n\n  //CHECKBOX CONTROLS//////\n  const handleChange = (event) => {\n    setImportantTask(event.target.checked);\n    \n  };\n    \n  \n\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={hide}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={hide}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              {title}\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={saveTask}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <form className={classes.form} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"Task\"\n            onChange={setTaskName}\n            value={taskName}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={<StarBorderIcon />}\n                checkedIcon={<StarIcon />}\n                onChange={handleChange}\n                checked={importantTask}\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Important\"\n          />\n          <TextField\n            id=\"filled-textarea\"\n            label=\"Notes\"\n            multiline\n            rows={4}\n            variant=\"outlined\"\n            onChange={setTaskNotes}\n            value={taskNotes}\n          />\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/pawelstyczen/Projekty/learning/tasker/src/firebase.js",[],"/Users/pawelstyczen/Projekty/learning/tasker/src/components/signup/Signup.js",["102"],"import React, { useRef, useState } from \"react\";\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\nexport default function SignUp() {\n\n  const classes = useStyles();\n\n\n  const nameRef = useRef();\n  const lastNameRef = useRef();\n  const passwordRef = useRef();\n  const emailRef = useRef();\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const { signup } = useAuth();\n  const history = useHistory();\n \n  async function handleSubmit(e) {\n    e.preventDefault();\n    \n    try {\n      setError(\"\");\n      setLoading(true);\n      \n      await signup(emailRef.current.value, passwordRef.current.value)\n      history.push('/')\n      \n    } catch {\n      setError(\"failed to create an account\");\n    }\n    setLoading(false);\n  \n  }\n \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n          {error}\n        </Typography>\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                inputRef={nameRef}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                inputRef={lastNameRef}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                inputRef={emailRef}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                inputRef={passwordRef}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link component={RouterLink} to=\"/Login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","/Users/pawelstyczen/Projekty/learning/tasker/src/contexts/AuthContext.js",[],"/Users/pawelstyczen/Projekty/learning/tasker/src/components/Dashboard/Dashboard.js",[],["103","104"],"/Users/pawelstyczen/Projekty/learning/tasker/src/components/Login/Login.js",["105"],"import React, {useRef, useState} from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport {useAuth} from '../../contexts/AuthContext'\n\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const passwordRef = useRef();\n  const emailRef = useRef();\n\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const { login } = useAuth();\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    console.log(emailRef.current.value);\n    try {\n      setError(\"\");\n      setLoading(true);\n      \n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push('/')\n\n      \n    } catch {\n      setError(\"failed to log in to account\");\n    }\n    setLoading(false);\n  \n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n            {error}\n          </Typography>\n          <form onSubmit={handleSubmit} className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              inputRef={emailRef}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              inputRef={passwordRef}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link component={RouterLink} to=\"/forgot-password\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link component={RouterLink} to=\"/Signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","/Users/pawelstyczen/Projekty/learning/tasker/src/components/UI/SettingsModal/SettingsModal.js",["106","107","108","109"],"import React, { useEffect, useState } from \"react\";\n\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport { useHistory } from 'react-router-dom';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"80%\",\n    margin: \"auto\",\n\n    \"& > *\": {\n      marginBottom: \"2rem\",\n    },\n  },\n}));\nfunction ListItemLink(props) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AddTaskModal({ show, hide }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = useState(\"\")\n  const { currentUser, logout } = useAuth()\n  const history = useHistory()\n\n  useEffect(() => {\n    setOpen(show);\n  }, [show]);\n\n  async function handleLogout() {\n    try {\n      await logout()\n      history.pushState('/logout')\n    }\n    catch {\n      setError('failed to log out')\n    }\n  }\n\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={hide}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={hide}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Settings\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      {error}\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          <ListItem>\n            <ListItemText primary=\"Account\" />\n            <Typography>{currentUser.email}</Typography>\n          </ListItem>\n          <ListItem button onClick={handleLogout}>\n            <ListItemText primary=\"Log Out\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText primary=\"Inbox\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemText primary=\"Inbox\" />\n          </ListItem>\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/pawelstyczen/Projekty/learning/tasker/src/components/PrivateRoute/PrivateRoute.js",[],"/Users/pawelstyczen/Projekty/learning/tasker/src/components/ForgotPassword/ForgotPassword.js",["110","111"],"import React, {useRef, useState} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {useAuth} from '../../contexts/AuthContext'\n\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function ForgotPassword() {\n  const classes = useStyles();\n\n  \n  const emailRef = useRef();\n  const [error, setError] = useState();\n  const [message, setMessage] = useState(\"\")\n  const [loading, setLoading] = useState(\"false\");\n  const { resetPasword } = useAuth();\n \n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    \n    try {\n      setMessage(\"\");  \n      setError(\"\");\n      setLoading(true);\n      \n      await resetPasword(emailRef.current.value);\n     setMessage('Check your inbox for further instructions')\n\n      \n    } catch {\n      setError(\"failed reset password\");\n    }\n    setLoading(false);\n  \n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Reset Password\n          </Typography>\n          <form onSubmit={handleSubmit} className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              inputRef={emailRef}\n            />\n          {message}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Reset Password\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link component={RouterLink} to=\"/login\" variant=\"body2\">\n                  Log in\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link component={RouterLink} to=\"/Signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":27,"nodeType":"118","messageId":"119","endLine":2,"endColumn":37},{"ruleId":"116","severity":1,"message":"120","line":13,"column":11,"nodeType":"118","messageId":"119","endLine":13,"endColumn":18},{"ruleId":"112","replacedBy":"121"},{"ruleId":"114","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":21,"column":31,"nodeType":"125","messageId":"126","endLine":21,"endColumn":33},{"ruleId":"127","severity":1,"message":"128","line":62,"column":3,"nodeType":"129","messageId":"130","endLine":71,"endColumn":4},{"ruleId":"131","severity":1,"message":"132","line":163,"column":6,"nodeType":"133","endLine":163,"endColumn":8,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"135","line":169,"column":6,"nodeType":"133","endLine":169,"endColumn":13,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"137","line":258,"column":6,"nodeType":"133","endLine":258,"endColumn":25,"suggestions":"138"},{"ruleId":"116","severity":1,"message":"139","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":31},{"ruleId":"116","severity":1,"message":"140","line":10,"column":8,"nodeType":"118","messageId":"119","endLine":10,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":43,"column":5,"nodeType":"129","messageId":"130","endLine":52,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":46,"column":7,"nodeType":"143","messageId":"144","endLine":47,"endColumn":37},{"ruleId":"141","severity":1,"message":"142","line":48,"column":7,"nodeType":"143","messageId":"144","endLine":49,"endColumn":35},{"ruleId":"141","severity":1,"message":"142","line":50,"column":7,"nodeType":"143","messageId":"144","endLine":51,"endColumn":37},{"ruleId":"116","severity":1,"message":"145","line":13,"column":10,"nodeType":"118","messageId":"119","endLine":13,"endColumn":27},{"ruleId":"131","severity":1,"message":"146","line":105,"column":3,"nodeType":"118","endLine":105,"endColumn":12,"suggestions":"147"},{"ruleId":"116","severity":1,"message":"148","line":15,"column":8,"nodeType":"118","messageId":"119","endLine":15,"endColumn":20},{"ruleId":"131","severity":1,"message":"149","line":64,"column":6,"nodeType":"133","endLine":64,"endColumn":12,"suggestions":"150"},{"ruleId":"116","severity":1,"message":"151","line":68,"column":10,"nodeType":"118","messageId":"119","endLine":68,"endColumn":17},{"ruleId":"112","replacedBy":"152"},{"ruleId":"114","replacedBy":"153"},{"ruleId":"116","severity":1,"message":"151","line":75,"column":10,"nodeType":"118","messageId":"119","endLine":75,"endColumn":17},{"ruleId":"116","severity":1,"message":"140","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":14},{"ruleId":"116","severity":1,"message":"154","line":16,"column":8,"nodeType":"118","messageId":"119","endLine":16,"endColumn":17},{"ruleId":"116","severity":1,"message":"155","line":20,"column":8,"nodeType":"118","messageId":"119","endLine":20,"endColumn":20},{"ruleId":"116","severity":1,"message":"156","line":43,"column":10,"nodeType":"118","messageId":"119","endLine":43,"endColumn":22},{"ruleId":"116","severity":1,"message":"157","line":71,"column":10,"nodeType":"118","messageId":"119","endLine":71,"endColumn":15},{"ruleId":"116","severity":1,"message":"151","line":73,"column":10,"nodeType":"118","messageId":"119","endLine":73,"endColumn":17},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.",["158"],["159"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFromFirebase'. Either include it or remove the dependency array.","ArrayExpression",["160"],"React Hook useEffect has missing dependencies: 'addToFirebase' and 'firebaseDbInitialized'. Either include them or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'firebaseDbInitialized'. Either include it or remove the dependency array.",["162"],"'FilterDispatchContext' is defined but never used.","'Button' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'CenterFocusStrong' is defined but never used.","React Hook useEffect contains a call to 'setChecked'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [task.completed] as a second argument to the useEffect Hook.",["163"],"'CheckBoxIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'editTask' and 'setImportantTask'. Either include them or remove the dependency array. If 'setImportantTask' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["164"],"'loading' is assigned a value but never used.",["158"],["159"],"'TextField' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemLink' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [getFromFirebase]",{"range":"175","text":"176"},"Update the dependencies array to be: [addToFirebase, firebaseDbInitialized, tasks]",{"range":"177","text":"178"},"Update the dependencies array to be: [tasks, taskFilter, firebaseDbInitialized]",{"range":"179","text":"180"},"Add dependencies array: [task.completed]",{"range":"181","text":"182"},"Update the dependencies array to be: [editTask, setImportantTask, show]",{"range":"183","text":"184"},[4012,4014],"[getFromFirebase]",[4109,4116],"[addToFirebase, firebaseDbInitialized, tasks]",[6763,6782],"[tasks, taskFilter, firebaseDbInitialized]",[2328,2328],", [task.completed]",[1651,1657],"[editTask, setImportantTask, show]"]